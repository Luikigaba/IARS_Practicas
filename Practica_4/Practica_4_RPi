[
    {
        "id": "2c687c41.e1d6a4",
        "type": "tab",
        "label": "Practica_4",
        "disabled": false,
        "info": ""
    },
    {
        "id": "13c21d0d.c39483",
        "type": "http in",
        "z": "2c687c41.e1d6a4",
        "name": "Obtiene comando",
        "url": "/status",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 200,
        "wires": [
            [
                "6c4fe171.14f1b"
            ]
        ]
    },
    {
        "id": "6c4fe171.14f1b",
        "type": "function",
        "z": "2c687c41.e1d6a4",
        "name": "Interruptor transmisión",
        "func": "// Carga la variable de flujo de estado y el comando recibido del ordenador\nvar status = flow.get('st');\nvar status_pay = msg.payload['Status'];\n\n// Flujo para determinar el estado siguiente y devolver la respuesta\nif (status=='1' & status_pay=='1'){\n    msg.payload['Resp'] = 'Ya estaba encendido';\n} else if (status=='1' & status_pay=='0'){\n    msg.payload['Resp'] = 'Se ha apagado';\n    msg.payload['Status'] = '0';\n} else if (status=='0' & status_pay=='0'){\n    msg.payload['Resp'] = 'Ya estaba apagado';\n} else if (status=='0' & status_pay=='1'){\n    msg.payload['Resp'] = 'Se ha encendido';\n    msg.payload['Status'] = '1';\n}\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 200,
        "wires": [
            [
                "4273dc7c.b9cbd4"
            ]
        ]
    },
    {
        "id": "4273dc7c.b9cbd4",
        "type": "change",
        "z": "2c687c41.e1d6a4",
        "name": "Modifica variables",
        "rules": [
            {
                "t": "set",
                "p": "st",
                "pt": "flow",
                "to": "payload['Status']",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload['Resp']",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 200,
        "wires": [
            [
                "df9eefe3.65ecd"
            ]
        ]
    },
    {
        "id": "df9eefe3.65ecd",
        "type": "http response",
        "z": "2c687c41.e1d6a4",
        "name": "Ok",
        "statusCode": "200",
        "headers": {},
        "x": 730,
        "y": 200,
        "wires": []
    },
    {
        "id": "ed49ace1.5c59c",
        "type": "inject",
        "z": "2c687c41.e1d6a4",
        "name": "Inyección cíclica",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 170,
        "y": 60,
        "wires": [
            [
                "a4db2f2c.740fc"
            ]
        ]
    },
    {
        "id": "a4db2f2c.740fc",
        "type": "function",
        "z": "2c687c41.e1d6a4",
        "name": "Generador de temperatura",
        "func": "// Carga la variable de flujo Temperatura\nvar temp = flow.get('Temperatura');\n// Aumenta el contador de la temperatura\ntemp += 0.5;\n// Actualiza la variable de flujo\nflow.set('Temperatura', temp);\n\n// Pasa el timestamp a la zona horaria correcta y lo convierte a string\nvar d = Math.round(new Date(msg.payload).getTime()/1000)+2*3600;\nd = new Date(d*1000).toISOString();\n\n// ID del sensor\nvar sensor_id = 31;\n\n// Guarda los datos en el mensaje\nmsg.payload = {Temperature: temp,\n    Timestamp: d,\n    Units: 'ºC',\n    Sensor_Id: sensor_id,\n    reading_Id: msg.payload+sensor_id,\n    magnitud: 'Temperatura'\n};\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 60,
        "wires": [
            [
                "12bbcac8.da7555"
            ]
        ]
    },
    {
        "id": "e86aed44.0829e",
        "type": "http request",
        "z": "2c687c41.e1d6a4",
        "name": "Envía el dato por HTTP",
        "method": "GET",
        "ret": "txt",
        "paytoqs": true,
        "url": "172.20.10.3:1880/temp",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 810,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "b60145f5.ab42a8",
        "type": "inject",
        "z": "2c687c41.e1d6a4",
        "name": "Inicialización",
        "topic": "",
        "payload": "Start",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0",
        "x": 170,
        "y": 120,
        "wires": [
            [
                "c74c2f32.8805"
            ]
        ]
    },
    {
        "id": "c74c2f32.8805",
        "type": "change",
        "z": "2c687c41.e1d6a4",
        "name": "Inic. Temperatura",
        "rules": [
            {
                "t": "set",
                "p": "Temperatura",
                "pt": "flow",
                "to": "25",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "st",
                "pt": "flow",
                "to": "'1'",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "12bbcac8.da7555",
        "type": "switch",
        "z": "2c687c41.e1d6a4",
        "name": "",
        "property": "st",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 610,
        "y": 60,
        "wires": [
            [
                "e86aed44.0829e"
            ]
        ]
    }
]
